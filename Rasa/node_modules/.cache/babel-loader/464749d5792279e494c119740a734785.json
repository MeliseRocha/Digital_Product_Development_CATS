{"ast":null,"code":"var _jsxFileName = \"/home/melise/Digital_Product_Development_CATS/Rasa/src/components/Basic.js\",\n    _s = $RefreshSig$();\n\nimport './chatBot.css';\nimport react, { useEffect, useState } from 'react';\nimport { IoMdSend } from 'react-icons/io';\nimport { BiBot, BiUser } from 'react-icons/bi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Basic() {\n  _s();\n\n  const [chat, setChat] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [botTyping, setbotTyping] = useState(false);\n  useEffect(() => {\n    console.log(\"called\");\n    const objDiv = document.getElementById('messageArea');\n    objDiv.scrollTop = objDiv.scrollHeight;\n  }, [chat]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const name = \"shreyas\";\n    const request_temp = {\n      sender: \"user\",\n      sender_id: name,\n      msg: inputMessage\n    };\n\n    if (inputMessage !== \"\") {\n      setChat(chat => [...chat, request_temp]);\n      setbotTyping(true);\n      setInputMessage('');\n      rasaAPI(name, inputMessage);\n    } else {\n      window.alert(\"Please enter valid message\");\n    }\n  };\n\n  const rasaAPI = async function handleClick(name, msg) {\n    //chatData.push({sender : \"user\", sender_id : name, msg : msg});\n    await fetch('http://localhost:5005/webhooks/rest/webhook', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'charset': 'UTF-8'\n      },\n      credentials: \"same-origin\",\n      body: JSON.stringify({\n        \"sender\": name,\n        \"message\": msg\n      })\n    }).then(response => response.json()).then(response => {\n      if (response) {\n        const temp = response[0];\n        const recipient_id = temp[\"recipient_id\"];\n        const recipient_msg = temp[\"text\"];\n        const response_temp = {\n          sender: \"bot\",\n          recipient_id: recipient_id,\n          msg: recipient_msg\n        };\n        setbotTyping(false);\n        setChat(chat => [...chat, response_temp]); // scrollBottom();\n      }\n    });\n  };\n\n  console.log(chat);\n  const stylecard = {\n    maxWidth: '35rem',\n    border: '1px solid black',\n    paddingLeft: '0px',\n    paddingRight: '0px',\n    borderRadius: '30px',\n    boxShadow: '0 16px 20px 0 rgba(0,0,0,0.4)'\n  };\n  const styleHeader = {\n    height: '4.5rem',\n    borderBottom: '1px solid black',\n    borderRadius: '30px 30px 0px 0px',\n    backgroundColor: '#8012c4'\n  };\n  const styleFooter = {\n    //maxWidth : '32rem',\n    borderTop: '1px solid black',\n    borderRadius: '0px 0px 30px 30px',\n    backgroundColor: '#8012c4'\n  };\n  const styleBody = {\n    paddingTop: '10px',\n    height: '28rem',\n    overflowY: 'a',\n    overflowX: 'hidden'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          style: stylecard,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cardHeader text-white\",\n            style: styleHeader,\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              style: {\n                marginBottom: '0px'\n              },\n              children: \"AI Assistant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 25\n            }, this), botTyping ? /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Bot Typing....\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 38\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cardBody\",\n            id: \"messageArea\",\n            style: styleBody,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row msgarea\",\n              children: chat.map((user, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: user.sender === 'bot' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"msgalignstart\",\n                  children: [/*#__PURE__*/_jsxDEV(BiBot, {\n                    className: \"botIcon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"botmsg\",\n                    children: user.msg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 79\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"msgalignend\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"usermsg\",\n                    children: user.msg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(BiUser, {\n                    className: \"userIcon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 88\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 45\n                }, this)\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cardFooter text-white\",\n            style: styleFooter,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                style: {\n                  display: 'flex'\n                },\n                onSubmit: handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-10\",\n                  style: {\n                    paddingRight: '0px'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    onChange: e => setInputMessage(e.target.value),\n                    value: inputMessage,\n                    type: \"text\",\n                    className: \"msginp\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-2 cola\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"circleBtn\",\n                    children: /*#__PURE__*/_jsxDEV(IoMdSend, {\n                      className: \"sendBtn\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 159,\n                      columnNumber: 82\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Basic, \"vJqQl14wP2RkinXQhEOtDULXOys=\");\n\n_c = Basic;\nexport default Basic;\n\nvar _c;\n\n$RefreshReg$(_c, \"Basic\");","map":{"version":3,"sources":["/home/melise/Digital_Product_Development_CATS/Rasa/src/components/Basic.js"],"names":["react","useEffect","useState","IoMdSend","BiBot","BiUser","Basic","chat","setChat","inputMessage","setInputMessage","botTyping","setbotTyping","console","log","objDiv","document","getElementById","scrollTop","scrollHeight","handleSubmit","evt","preventDefault","name","request_temp","sender","sender_id","msg","rasaAPI","window","alert","handleClick","fetch","method","headers","credentials","body","JSON","stringify","then","response","json","temp","recipient_id","recipient_msg","response_temp","stylecard","maxWidth","border","paddingLeft","paddingRight","borderRadius","boxShadow","styleHeader","height","borderBottom","backgroundColor","styleFooter","borderTop","styleBody","paddingTop","overflowY","overflowX","marginBottom","map","user","key","display","e","target","value"],"mappings":"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","sourcesContent":["import './chatBot.css';\nimport react, { useEffect, useState } from 'react';\nimport {IoMdSend}  from 'react-icons/io';\nimport {BiBot,BiUser} from 'react-icons/bi';\n\nfunction Basic(){\n    const [chat,setChat] = useState([]);\n    const [inputMessage,setInputMessage] = useState('');\n    const [botTyping,setbotTyping] = useState(false);\n\n    \n   useEffect(()=>{\n   \n        console.log(\"called\");\n        const objDiv = document.getElementById('messageArea');\n        objDiv.scrollTop = objDiv.scrollHeight;\n        \n    \n    },[chat])\n\n    \n\n\n    const handleSubmit=(evt)=>{\n        evt.preventDefault();\n        const name = \"shreyas\";\n        const request_temp = {sender : \"user\", sender_id : name , msg : inputMessage};\n        \n        if(inputMessage !== \"\"){\n            \n            setChat(chat => [...chat, request_temp]);\n            setbotTyping(true);\n            setInputMessage('');\n            rasaAPI(name,inputMessage);\n        }\n        else{\n            window.alert(\"Please enter valid message\");\n        }\n        \n    }\n\n\n    const rasaAPI = async function handleClick(name,msg) {\n    \n        //chatData.push({sender : \"user\", sender_id : name, msg : msg});\n        \n\n          await fetch('http://localhost:5005/webhooks/rest/webhook', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n              'charset':'UTF-8',\n            },\n            credentials: \"same-origin\",\n            body: JSON.stringify({ \"sender\": name, \"message\": msg }),\n        })\n        .then(response => response.json())\n        .then((response) => {\n            if(response){\n                const temp = response[0];\n                const recipient_id = temp[\"recipient_id\"];\n                const recipient_msg = temp[\"text\"];        \n\n\n                const response_temp = {sender: \"bot\",recipient_id : recipient_id,msg: recipient_msg};\n                setbotTyping(false);\n                \n                setChat(chat => [...chat, response_temp]);\n               // scrollBottom();\n\n            }\n        }) \n    }\n\n    console.log(chat);\n\n    const stylecard = {\n        maxWidth : '35rem',\n        border: '1px solid black',\n        paddingLeft: '0px',\n        paddingRight: '0px',\n        borderRadius: '30px',\n        boxShadow: '0 16px 20px 0 rgba(0,0,0,0.4)'\n\n    }\n    const styleHeader = {\n        height: '4.5rem',\n        borderBottom : '1px solid black',\n        borderRadius: '30px 30px 0px 0px',\n        backgroundColor: '#8012c4',\n\n    }\n    const styleFooter = {\n        //maxWidth : '32rem',\n        borderTop : '1px solid black',\n        borderRadius: '0px 0px 30px 30px',\n        backgroundColor: '#8012c4',\n        \n        \n    }\n    const styleBody = {\n        paddingTop : '10px',\n        height: '28rem',\n        overflowY: 'a',\n        overflowX: 'hidden',\n        \n    }\n\n    return (\n      <div>\n        {/* <button onClick={()=>rasaAPI(\"shreyas\",\"hi\")}>Try this</button> */}\n        \n\n        <div className=\"container\">\n        <div className=\"row justify-content-center\">\n            \n                <div className=\"card\" style={stylecard}>\n                    <div className=\"cardHeader text-white\" style={styleHeader}>\n                        <h1 style={{marginBottom:'0px'}}>AI Assistant</h1>\n                        {botTyping ? <h6>Bot Typing....</h6> : null}\n                        \n                        \n                        \n                    </div>\n                    <div className=\"cardBody\" id=\"messageArea\" style={styleBody}>\n                        \n                        <div className=\"row msgarea\">\n                            {chat.map((user,key) => (\n                                <div key={key}>\n                                    {user.sender==='bot' ?\n                                        (\n                                            \n                                            <div className= 'msgalignstart'>\n                                                <BiBot className=\"botIcon\"  /><h5 className=\"botmsg\">{user.msg}</h5>\n                                            </div>\n                                        \n                                        )\n\n                                        :(\n                                            <div className= 'msgalignend'>\n                                                <h5 className=\"usermsg\">{user.msg}</h5><BiUser className=\"userIcon\" />\n                                            </div>\n                                        )\n                                    }\n                                </div>\n                            ))}\n                            \n                        </div>\n                \n                    </div>\n                    <div className=\"cardFooter text-white\" style={styleFooter}>\n                        <div className=\"row\">\n                            <form style={{display: 'flex'}} onSubmit={handleSubmit}>\n                                <div className=\"col-10\" style={{paddingRight:'0px'}}>\n                                    <input onChange={e => setInputMessage(e.target.value)} value={inputMessage} type=\"text\" className=\"msginp\"></input>\n                                </div>\n                                <div className=\"col-2 cola\">\n                                    <button type=\"submit\" className=\"circleBtn\" ><IoMdSend className=\"sendBtn\" /></button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            \n        </div>\n        </div>\n\n      </div>\n    );\n}\n  \nexport default Basic;\n"]},"metadata":{},"sourceType":"module"}