{"ast":null,"code":"var _jsxFileName = \"/home/melise/Digital_Product_Development_CATS/Rasa/src/components/Basic.js\",\n    _s = $RefreshSig$();\n\nimport './chatBot.css';\nimport React, { useEffect, useState } from 'react';\nimport { IoMdSend } from 'react-icons/io';\nimport { BiBot, BiUser } from 'react-icons/bi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Basic() {\n  _s();\n\n  const [chat, setChat] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [botTyping, setbotTyping] = useState(false);\n  useEffect(() => {\n    const objDiv = document.getElementById('messageArea');\n    objDiv.scrollTop = objDiv.scrollHeight;\n  }, [chat]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const name = \"shreyas\";\n    const request_temp = {\n      sender: \"user\",\n      sender_id: name,\n      msg: inputMessage\n    };\n\n    if (inputMessage !== \"\") {\n      setChat(chat => [...chat, request_temp]);\n      setbotTyping(true);\n      setInputMessage('');\n      rasaAPI(name, inputMessage);\n    } else {\n      window.alert(\"Please enter valid message\");\n    }\n  };\n\n  const rasaAPI = async function handleClick(name, msg) {\n    try {\n      const response = await fetch('http://localhost:5055/webhook', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'charset': 'UTF-8'\n        },\n        credentials: \"same-origin\",\n        body: JSON.stringify({\n          \"sender\": name,\n          \"message\": msg\n        })\n      });\n      const data = await response.json();\n\n      if (data && data.length > 0) {\n        const temp = data[0];\n        const recipient_id = temp[\"recipient_id\"];\n        const recipient_msg = temp[\"text\"];\n        const response_temp = {\n          sender: \"bot\",\n          recipient_id: recipient_id,\n          msg: recipient_msg\n        };\n        setbotTyping(false);\n        setChat(chat => [...chat, response_temp]);\n      } else {\n        setbotTyping(false);\n        setChat(chat => [...chat, {\n          sender: \"bot\",\n          msg: \"Sorry, I didn't understand that.\"\n        }]);\n      }\n    } catch (error) {\n      console.error(\"Error contacting Rasa API:\", error);\n      setbotTyping(false);\n      setChat(chat => [...chat, {\n        sender: \"bot\",\n        msg: \"Sorry, there was an error. Please try again.\"\n      }]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          style: {\n            maxWidth: '35rem',\n            border: '1px solid black',\n            paddingLeft: '0px',\n            paddingRight: '0px',\n            borderRadius: '30px',\n            boxShadow: '0 16px 20px 0 rgba(0,0,0,0.4)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cardHeader text-white\",\n            style: {\n              height: '4.5rem',\n              borderBottom: '1px solid black',\n              borderRadius: '30px 30px 0px 0px',\n              backgroundColor: '#8012c4'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              style: {\n                marginBottom: '0px'\n              },\n              children: \"AI Assistant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), botTyping ? /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Bot Typing....\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 42\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cardBody\",\n            id: \"messageArea\",\n            style: {\n              paddingTop: '10px',\n              height: '28rem',\n              overflowY: 'auto',\n              overflowX: 'hidden'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row msgarea\",\n              children: chat.map((user, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: user.sender === 'bot' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"msgalignstart\",\n                  children: [/*#__PURE__*/_jsxDEV(BiBot, {\n                    className: \"botIcon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"botmsg\",\n                    children: user.msg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"msgalignend\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"usermsg\",\n                    children: user.msg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(BiUser, {\n                    className: \"userIcon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 45\n                }, this)\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cardFooter text-white\",\n            style: {\n              borderTop: '1px solid black',\n              borderRadius: '0px 0px 30px 30px',\n              backgroundColor: '#8012c4'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                style: {\n                  display: 'flex'\n                },\n                onSubmit: handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-10\",\n                  style: {\n                    paddingRight: '0px'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    onChange: e => setInputMessage(e.target.value),\n                    value: inputMessage,\n                    type: \"text\",\n                    className: \"msginp\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-2 cola\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"circleBtn\",\n                    children: /*#__PURE__*/_jsxDEV(IoMdSend, {\n                      className: \"sendBtn\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 85\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Basic, \"8nTtceGq/5ih/S9jknY5vRmuc+U=\");\n\n_c = Basic;\nexport default Basic;\n\nvar _c;\n\n$RefreshReg$(_c, \"Basic\");","map":{"version":3,"sources":["/home/melise/Digital_Product_Development_CATS/Rasa/src/components/Basic.js"],"names":["React","useEffect","useState","IoMdSend","BiBot","BiUser","Basic","chat","setChat","inputMessage","setInputMessage","botTyping","setbotTyping","objDiv","document","getElementById","scrollTop","scrollHeight","handleSubmit","evt","preventDefault","name","request_temp","sender","sender_id","msg","rasaAPI","window","alert","handleClick","response","fetch","method","headers","credentials","body","JSON","stringify","data","json","length","temp","recipient_id","recipient_msg","response_temp","error","console","maxWidth","border","paddingLeft","paddingRight","borderRadius","boxShadow","height","borderBottom","backgroundColor","marginBottom","paddingTop","overflowY","overflowX","map","user","key","borderTop","display","e","target","value"],"mappings":"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","sourcesContent":["import './chatBot.css';\nimport React, { useEffect, useState } from 'react';\nimport { IoMdSend } from 'react-icons/io';\nimport { BiBot, BiUser } from 'react-icons/bi';\n\nfunction Basic() {\n    const [chat, setChat] = useState([]);\n    const [inputMessage, setInputMessage] = useState('');\n    const [botTyping, setbotTyping] = useState(false);\n\n    useEffect(() => {\n        const objDiv = document.getElementById('messageArea');\n        objDiv.scrollTop = objDiv.scrollHeight;\n    }, [chat]);\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        const name = \"shreyas\";\n        const request_temp = { sender: \"user\", sender_id: name, msg: inputMessage };\n\n        if (inputMessage !== \"\") {\n            setChat(chat => [...chat, request_temp]);\n            setbotTyping(true);\n            setInputMessage('');\n            rasaAPI(name, inputMessage);\n        } else {\n            window.alert(\"Please enter valid message\");\n        }\n    };\n\n    const rasaAPI = async function handleClick(name, msg) {\n        try {\n            const response = await fetch('http://localhost:5055/webhook', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'charset': 'UTF-8',\n                },\n                credentials: \"same-origin\",\n                body: JSON.stringify({ \"sender\": name, \"message\": msg }),\n            });\n            const data = await response.json();\n\n            if (data && data.length > 0) {\n                const temp = data[0];\n                const recipient_id = temp[\"recipient_id\"];\n                const recipient_msg = temp[\"text\"];\n\n                const response_temp = { sender: \"bot\", recipient_id: recipient_id, msg: recipient_msg };\n                setbotTyping(false);\n\n                setChat(chat => [...chat, response_temp]);\n            } else {\n                setbotTyping(false);\n                setChat(chat => [...chat, { sender: \"bot\", msg: \"Sorry, I didn't understand that.\" }]);\n            }\n        } catch (error) {\n            console.error(\"Error contacting Rasa API:\", error);\n            setbotTyping(false);\n            setChat(chat => [...chat, { sender: \"bot\", msg: \"Sorry, there was an error. Please try again.\" }]);\n        }\n    };\n\n    return (\n        <div>\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"card\" style={{ maxWidth: '35rem', border: '1px solid black', paddingLeft: '0px', paddingRight: '0px', borderRadius: '30px', boxShadow: '0 16px 20px 0 rgba(0,0,0,0.4)' }}>\n                        <div className=\"cardHeader text-white\" style={{ height: '4.5rem', borderBottom: '1px solid black', borderRadius: '30px 30px 0px 0px', backgroundColor: '#8012c4' }}>\n                            <h1 style={{ marginBottom: '0px' }}>AI Assistant</h1>\n                            {botTyping ? <h6>Bot Typing....</h6> : null}\n                        </div>\n                        <div className=\"cardBody\" id=\"messageArea\" style={{ paddingTop: '10px', height: '28rem', overflowY: 'auto', overflowX: 'hidden' }}>\n                            <div className=\"row msgarea\">\n                                {chat.map((user, key) => (\n                                    <div key={key}>\n                                        {user.sender === 'bot' ?\n                                            <div className='msgalignstart'>\n                                                <BiBot className=\"botIcon\" />\n                                                <h5 className=\"botmsg\">{user.msg}</h5>\n                                            </div>\n                                            :\n                                            <div className='msgalignend'>\n                                                <h5 className=\"usermsg\">{user.msg}</h5>\n                                                <BiUser className=\"userIcon\" />\n                                            </div>\n                                        }\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <div className=\"cardFooter text-white\" style={{ borderTop: '1px solid black', borderRadius: '0px 0px 30px 30px', backgroundColor: '#8012c4' }}>\n                            <div className=\"row\">\n                                <form style={{ display: 'flex' }} onSubmit={handleSubmit}>\n                                    <div className=\"col-10\" style={{ paddingRight: '0px' }}>\n                                        <input onChange={e => setInputMessage(e.target.value)} value={inputMessage} type=\"text\" className=\"msginp\" />\n                                    </div>\n                                    <div className=\"col-2 cola\">\n                                        <button type=\"submit\" className=\"circleBtn\"><IoMdSend className=\"sendBtn\" /></button>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Basic;\n"]},"metadata":{},"sourceType":"module"}